name: Release

on:
  push:
    branches: [ "main" ]

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: Get next version
        uses: reecetech/version-increment@2023.10.2
        id: version
        with:
          scheme: semver
          increment: minor
          use_api: true
    outputs:
      version: ${{ steps.version.outputs.version }}

  build-windows:
    needs: [get-version]
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install yq
        uses: dcarbone/install-yq-action@v1.1.1
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: pubspec.yaml
      - name: Install dependencies
        run: flutter pub get
      - name: Build
        run: flutter build windows --release --dart-define-from-file=configs/production.env --build-name=${{ needs.get-version.outputs.version }}
      - name: Create archieve
        run: Compress-Archive -Path ./build/windows/x64/runner/Release/* -Destination todoer-windows.zip
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: todoer-windows.zip

  build-macos:
    needs: [get-version]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: pubspec.yaml
      - name: Install dependencies
        run: flutter pub get
      - name: Build
        run: flutter build macos --release --dart-define-from-file=configs/production.env --build-name=${{ needs.get-version.outputs.version }}
      - name: Install create-dmg
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install create-dmg
      - name: Create dmg
        run: create-dmg todoer-macos.dmg build/macos/Build/Products/Release/todoer.app
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-macos
          path: todoer-macos.dmg

  build-linux:
    needs: [get-version]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install build tools
        run: |
          sudo apt update
          sudo apt install \
            clang cmake \
            ninja-build pkg-config \
            libgtk-3-dev liblzma-dev \
            libstdc++-12-dev
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: pubspec.yaml
      - name: Install dependencies
        run: flutter pub get
      - name: Build
        run: flutter build linux --release --dart-define-from-file=configs/production.env --build-name=${{ needs.get-version.outputs.version }}
      - name: Create archieve
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          cwd: ./build/linux/x64/release/bundle
          files: ./
          outPath: todoer-linux.tar.gz
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: todoer-linux.tar.gz

  release:
    needs:
      - get-version
      - build-windows
      - build-macos
      - build-linux
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Commits since last release
        id: changes
        uses: simbo/changes-since-last-release-action@v1
        with:
          line-prefix: "* "
          include-hashes: false

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: release-*

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.get-version.outputs.version }}
          release_name: Release ${{ needs.get-version.outputs.version }}
          body: ${{ steps.changes.outputs.log }}

      - name: Upload windows asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./todoer-windows.zip
          asset_name: todoer-${{ needs.get-version.outputs.version }}-windows.zip
          asset_content_type: application/zip

      - name: Upload macos asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./todoer-macos.dmg
          asset_name: todoer-${{ needs.get-version.outputs.version }}-macos.dmg
          asset_content_type: application/octet-stream

      - name: Upload linux asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./todoer-linux.tar.gz
          asset_name: todoer-${{ needs.get-version.outputs.version }}-linux-x64.tar.gz
          asset_content_type: application/octet-stream
